version: '3.8'

services:
  elastic:
    build:
      dockerfile: elastic/Dockerfile
      context: etl
    logging:
      driver: gelf
      options:
        gelf-address: udp://127.0.0.1:5044
        tag: elastic
    ports:
      - '9200:9200'

  postgres:
    image: postgres:13.0-alpine
    restart: always
    logging:
      driver: gelf
      options:
        gelf-address: udp://127.0.0.1:5044
        tag: postgres
    ports:
      - '5432:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./django-admin/scripts/postgres:/docker-entrypoint-initdb.d/
    env_file:
      - .env

  etl:
    build:
      dockerfile: Dockerfile
      context: etl
    logging:
      driver: gelf
      options:
        gelf-address: udp://127.0.0.1:5044
        tag: etl
    depends_on:
      - postgres
      - elastic
    entrypoint: >
      sh -c 'python src/wait_for_es.py
      && python src/main.py'
    env_file:
      - .env

  backend:
    build:
      dockerfile: Dockerfile
      context: django-admin
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - static_volume:/usr/src/app/staticfiles/
    logging:
      driver: gelf
      options:
        gelf-address: udp://127.0.0.1:5044
        tag: django-admin
    env_file:
      - .env
    depends_on:
      - postgres

  #================================
  #       NGINX
  #================================
  nginx:
    image: nginx:latest
    container_name: nginx
    restart: always
    logging:
      driver: gelf
      options:
        gelf-address: udp://127.0.0.1:5044
        tag: nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/configs:/etc/nginx/conf.d:ro
      - static_volume:/usr/src/app/staticfiles/
    depends_on:
      - async_app
      - auth_app

  #================================
  #       Redislabs
  #================================
  redis_insight:
    image: redislabs/redisinsight:latest
    container_name: redislabs
    logging:
      driver: gelf
      options:
        gelf-address: udp://127.0.0.1:5044
        tag: redis-insight
    ports:
      - '8001:8001'
    volumes:
      - redis_insight_volume:/db
    depends_on:
      - redis

  #================================
  #       Async_app
  #================================
  async_app:
    build:
      context: async_api
      dockerfile: Dockerfile
    logging:
      driver: gelf
      options:
        gelf-address: udp://127.0.0.1:5044
        tag: async_app
    env_file:
      - .env
    ports:
      - '8085:8085'
    depends_on:
      - redis
      - elastic
      - auth_app

  #================================
  #       Authorization
  #================================
  auth_app:
    build:
      context: auth
      dockerfile: Dockerfile
    container_name: auth_app
    image: auth-flask-image
    logging:
      driver: gelf
      options:
        gelf-address: udp://127.0.0.1:5044
        tag: auth
    env_file:
      - .env
    volumes:
      - ./auth/src:/src
    depends_on:
      - postgres
      - redis

  #================================
  #       Redis
  #================================
  redis:
    image: redis:alpine
    hostname: redis
    container_name: redis
    logging:
      driver: gelf
      options:
        gelf-address: udp://127.0.0.1:5044
        tag: redis
    env_file:
      - .env
    volumes:
      - redis_volume:/data

  #================================
  #       JAEGER
  #================================
  jaeger:
    image: jaegertracing/all-in-one:1.36.0
    container_name: jaeger
    restart: always
    logging:
      driver: gelf
      options:
        gelf-address: udp://127.0.0.1:5044
        tag: jaeger
    ports:
      - "16686:16686"

########################
  #    UGC App
  ########################
  ugc_api:
    build:
      context: ugc
      dockerfile: api/Dockerfile
    logging:
      driver: gelf
      options:
        gelf-address: udp://127.0.0.1:5044
        tag: ugc_api
    env_file:
      - .env
    ports:
      - "8000:8000"

  ########################
  #    Zookeeper
  ########################
  zookeeper:
    image: zookeeper:3.5
    container_name: zookeeper
    hostname: zookeeper
    logging:
      driver: gelf
      options:
        gelf-address: udp://127.0.0.1:5044
        tag: zookeeper
    env_file:
      - .env

  ########################
  #    Kafka
  ########################
  kafka:
    container_name: kafka
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    logging:
      driver: gelf
      options:
        gelf-address: udp://127.0.0.1:5044
        tag: kafka
    ports:
      - "29092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  ########################
  #    ClickHouse
  ########################

  clickhouse-node1:
    image: yandex/clickhouse-server
    container_name: clickhouse-node1
    hostname: clickhouse-node1
    logging:
      driver: gelf
      options:
        gelf-address: udp://127.0.0.1:5044
        tag: clickhouse
    ports:
      - "8123:8123"
      - "9000:9000"
    volumes:
      - ./etl/clickhouse/data/node1:/etc/clickhouse-server
    depends_on:
      - zookeeper

  clickhouse-node2:
    image: yandex/clickhouse-server
    container_name: clickhouse-node2
    hostname: clickhouse-node2
    logging:
      driver: gelf
      options:
        gelf-address: udp://127.0.0.1:5044
        tag: clickhouse
    volumes:
      - ./etl/clickhouse/data/node2:/etc/clickhouse-server
    depends_on:
      - zookeeper

  clickhouse-node3:
    image: yandex/clickhouse-server
    container_name: clickhouse-node3
    hostname: clickhouse-node3
    logging:
      driver: gelf
      options:
        gelf-address: udp://127.0.0.1:5044
        tag: clickhouse
    volumes:
      - ./ugc/etl/clickhouse/data/node3:/etc/clickhouse-server
    depends_on:
      - zookeeper

  clickhouse-node4:
    image: yandex/clickhouse-server
    container_name: clickhouse-node4
    hostname: clickhouse-node4
    logging:
      driver: gelf
      options:
        gelf-address: udp://127.0.0.1:5044
        tag: clickhouse
    volumes:
      - ./ugc/etl/clickhouse/data/node4:/etc/clickhouse-server
    depends_on:
      - zookeeper

  ########################
  #    Kafka-Clickhouse ETL
  ########################
  ch_etl:
    build:
      context: ugc/etl
    image: ch_etl
    logging:
      driver: gelf
      options:
        gelf-address: udp://127.0.0.1:5044
        tag: ch_etl
    container_name: ch_etl
    restart: on-failure
    env_file:
      - .env
    depends_on:
      - clickhouse-node1
      - clickhouse-node2
      - clickhouse-node3
      - clickhouse-node4
  logstash:
    image: logstash:7.10.1
    environment:
      ES_HOST: "elasticsearch-logs:9200"
    ports:
      - "5044:5044/udp"
    volumes:
      # Монтируем файл с конфигурацией logstash
      - ./deploy/logstash.conf:/config/logstash.conf:ro
    # Запускаем с указанием конфигурационного файла
    command: logstash -f /config/logstash.conf

  elasticsearch-logs:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.1
    environment:
      # Указываем ES запуститься в одном экземпляре
      discovery.type: single-node
      ES_JAVA_OPTS: "-Xms200m -Xmx200m"
    ports:
      - "9201:9200"

    volumes:
      - /tmp/esdata:/tmp/elasticsearch/data

  kibana:
    image: docker.elastic.co/kibana/kibana:7.17.1
    ports:
      - "5601:5601"
    environment:
      ELASTICSEARCH_HOSTS: "http://elasticsearch-logs:9200"
    depends_on:
      - elasticsearch-logs

  ########################
  #    Mongo cluster
  ########################
  mongors1n1:
    container_name: mongors1n1
    image: mongo
    logging:
      driver: gelf
      options:
        gelf-address: udp://127.0.0.1:5044
        tag: mongo
    command: mongod --shardsvr --replSet mongors1 --dbpath /data/db --port 27017
    ports:
      - "27017:27017"
    expose:
      - "27017"

  mongors1n2:
    container_name: mongors1n2
    image: mongo
    logging:
      driver: gelf
      options:
        gelf-address: udp://127.0.0.1:5044
        tag: mongo
    command: mongod --shardsvr --replSet mongors1 --dbpath /data/db --port 27017
    ports:
      - "27027:27017"
    expose:
      - "27017"

  mongors1n3:
    container_name: mongors1n3
    image: mongo
    logging:
      driver: gelf
      options:
        gelf-address: udp://127.0.0.1:5044
        tag: mongo
    command: mongod --shardsvr --replSet mongors1 --dbpath /data/db --port 27017
    ports:
      - "27037:27017"
    expose:
      - "27017"

  mongors2n1:
    container_name: mongors2n1
    image: mongo
    logging:
      driver: gelf
      options:
        gelf-address: udp://127.0.0.1:5044
        tag: mongo
    command: mongod --shardsvr --replSet mongors2 --dbpath /data/db --port 27017
    ports:
      - "27047:27017"
    expose:
      - "27017"


  mongors2n2:
    container_name: mongors2n2
    image: mongo
    logging:
      driver: gelf
      options:
        gelf-address: udp://127.0.0.1:5044
        tag: mongo
    command: mongod --shardsvr --replSet mongors2 --dbpath /data/db --port 27017
    ports:
      - "27057:27017"
    expose:
      - "27017"


  mongors2n3:
    container_name: mongors2n3
    image: mongo
    logging:
      driver: gelf
      options:
        gelf-address: udp://127.0.0.1:5044
        tag: mongo
    command: mongod --shardsvr --replSet mongors2 --dbpath /data/db --port 27017
    ports:
      - "27067:27017"
    expose:
      - "27017"


  mongocfg1:
    container_name: mongocfg1
    image: mongo
    logging:
      driver: gelf
      options:
        gelf-address: udp://127.0.0.1:5044
        tag: mongo
    command: mongod --configsvr --replSet mongors1conf --dbpath /data/db --port 27017
    expose:
      - "27017"


  mongocfg2:
    container_name: mongocfg2
    image: mongo
    logging:
      driver: gelf
      options:
        gelf-address: udp://127.0.0.1:5044
        tag: mongo
    command: mongod --configsvr --replSet mongors1conf --dbpath /data/db --port 27017
    expose:
      - "27017"


  mongocfg3:
    container_name: mongocfg3
    image: mongo
    logging:
      driver: gelf
      options:
        gelf-address: udp://127.0.0.1:5044
        tag: mongo
    command: mongod --configsvr --replSet mongors1conf --dbpath /data/db --port 27017
    expose:
      - "27017"


  mongos1:
    container_name: mongos1
    image: mongo
    logging:
      driver: gelf
      options:
        gelf-address: udp://127.0.0.1:5044
        tag: mongo
    depends_on:
      - mongocfg1
      - mongocfg2
    command: mongos --configdb mongors1conf/mongocfg1:27017,mongocfg2:27017,mongocfg3:27017 --port 27017
    ports:
      - "27019:27017"
    expose:
      - "27017"


  mongos2:
    container_name: mongos2
    image: mongo
    logging:
      driver: gelf
      options:
        gelf-address: udp://127.0.0.1:5044
        tag: mongo
    depends_on:
      - mongocfg1
      - mongocfg2
    command: mongos --configdb mongors1conf/mongocfg1:27017,mongocfg2:27017,mongocfg3:27017 --port 27017
    ports:
      - "27020:27017"
    expose:
    - "27017"

volumes:
  postgres_data:
  static_volume:
  redis_volume:
  redis_insight_volume:
