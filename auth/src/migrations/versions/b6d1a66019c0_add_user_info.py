"""empty message

Revision ID: b6d1a66019c0
Revises: 1450dbea80e3
Create Date: 2022-06-22 20:59:32.028785

"""
import sqlalchemy as sa
from alembic import op


# revision identifiers, used by Alembic.
revision = 'b6d1a66019c0'
down_revision = '1450dbea80e3'
branch_labels = None
depends_on = None


def create_partition(target, connection, **kw) -> None:
    """ creating partition by user_sign_in """
    connection.execute(
        """CREATE TABLE IF NOT EXISTS "user_sessions_smart" PARTITION OF "user_sessions" FOR VALUES IN ('smart')"""
    )
    connection.execute(
        """CREATE TABLE IF NOT EXISTS "user_sessions_mobile" PARTITION OF "user_sessions" FOR VALUES IN ('mobile')"""
    )
    connection.execute(
        """CREATE TABLE IF NOT EXISTS "user_sessions_web" PARTITION OF "user_sessions" FOR VALUES IN ('web')"""
    )


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user_sessions',
    sa.Column('pk', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('user_agent', sa.Text(), nullable=False),
    sa.Column('last_login', sa.DateTime(timezone=True), nullable=False),
    sa.Column('user_device_type', sa.Text(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.pk'], ),
    sa.PrimaryKeyConstraint('pk', 'user_device_type'),
    sa.UniqueConstraint('pk', 'user_device_type'),
    postgresql_partition_by='LIST (user_device_type)',
    listeners=[('after_create', create_partition)]
    )
    op.add_column('users', sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True))
    op.add_column('users', sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True))
    op.add_column('users', sa.Column('first_name', sa.String(length=30), nullable=True))
    op.add_column('users', sa.Column('last_name', sa.String(length=150), nullable=True))
    op.add_column('users', sa.Column('birth_date', sa.Date(), nullable=True))
    op.add_column('users', sa.Column('phone', sa.String(length=255), nullable=True))
    op.alter_column('users', 'email',
               existing_type=sa.VARCHAR(length=255),
               nullable=False)
    op.alter_column('users', 'password',
               existing_type=sa.VARCHAR(length=255),
               nullable=False)
    op.drop_constraint('users_email_key', 'users', type_='unique')
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_phone'), 'users', ['phone'], unique=False)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_users_phone'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.create_unique_constraint('users_email_key', 'users', ['email'])
    op.alter_column('users', 'password',
               existing_type=sa.VARCHAR(length=255),
               nullable=True)
    op.alter_column('users', 'email',
               existing_type=sa.VARCHAR(length=255),
               nullable=True)
    op.drop_column('users', 'phone')
    op.drop_column('users', 'birth_date')
    op.drop_column('users', 'last_name')
    op.drop_column('users', 'first_name')
    op.drop_column('users', 'updated_at')
    op.drop_column('users', 'created_at')
    op.drop_table('user_sessions')
    # ### end Alembic commands ###
