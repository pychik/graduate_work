@startuml
scale 1
skinparam actorStyle awesome
!include <logos/postgresql>
!include <logos/nginx>
!include <logos/django>
!include <logos/python>
!include <logos/elasticsearch>
!include <logos/flask>
!include <logos/redis>
!include <logos/kafka>

"Users" as Users

'============================================
'Admin panel
'============================================
node Admin_panel{
"Managers" as Managers
["<$django>"] as django
database "<$postgresql>" as Admin_PG

Managers  -down-> django
django -down-> Admin_PG
}

'============================================
'ETl PG -> ELK
'============================================
cloud "ETl PG -> ELK" as ETL_1{
["<$python>"] as etl_1_py
}

Admin_PG .right.> etl_1_py

'============================================
'Async API
'============================================
node "Async API" as api{
["<$elasticsearch>"] as api_elc
etl_1_py .left.> api_elc
["<$redis>"]  as api_redis

["<$nginx>"] as api_nginx
[FastApi]  as FastApi

api_nginx -right-> FastApi
FastApi -right-> [Check redis]
[Check redis] -right-> api_redis
api_redis -[#green]left-> FastApi : True
[Check redis] -down-> api_elc : False
api_elc -up--> FastApi
}

Users -down--> api_nginx

'============================================
'AUTH
'============================================
node "AUTH" as auth{
"Admin" as Admin
["<$flask>"] as flask
["<$redis>"] as redis
database "<$postgresql>" as auth_pg
[Check token] as token

[Check black list] as list
Admin -right-> flask
flask -down-> token
token -right-> (no auth ->401)
token -down-> list
list -right-> redis
redis -right-> (True -> 401)

flask --> auth_pg : Reg new user
}

api <.[#red]right.> auth : Check token




queue "<$kafka>" as kafka
database CliclHouse as CL

package "UGC API" as ugc_api{
[FastApi] as ugc_fast_api
ugc_fast_api -right-> kafka
}
cloud "ETl Kafka -> CH" as ETL_2{
["<$python>"] as etl_2_py
}
kafka .right.> etl_2_py
etl_2_py .down.> CL

api ..[#red]right..> ugc_api


@enduml
